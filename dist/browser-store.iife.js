var BrowserStore=function(){"use strict";function v(t){let r=this,o=r.export("entity/init"),c=t.handleResponse,s=["save","load","list","remove"].reduce((n,a)=>(n[a]=c[a]||c.any,n),{});const w=[];function l(n,a,_){let e={},i=_.apimsg;for(let u in i){let p=i[u];typeof p=="function"?e[u]=p(n,a,_):e[u]=JSON.parse(JSON.stringify(p))}return e}let m={name:"BrowserStore",save:function(n,a,_){let e=t.debug&&h(arguments),i=t.prepareCtx(n),u=l(n,i,t);e&&(e.ctx=i)&&(e.apimsg=u),this.act(u,function(f,d,g){return e&&(e.apiend=Date.now())&&(e.err=f)&&(e.res=d)&&(e.apimeta=g),s.save(this,i,a,f,d,g,e)})},load:function(n,a,_){let e=t.debug&&h(arguments),i=t.prepareCtx(n),u=l(n,i,t);e&&(e.ctx=i)&&(e.apimsg=u),this.act(u,function(f,d,g){return e&&S(e,arguments),s.load(this,i,a,f,d,g,e)})},list:function(n,a,_){let e=t.debug&&h(arguments),i=t.prepareCtx(n),u=l(n,i,t);e&&(e.ctx=i)&&(e.apimsg=u),this.act(u,function(f,d,g){return e&&S(e,arguments),s.list(this,i,a,f,d,g,e)})},remove:function(n,a,_){let e=t.debug&&h(arguments),i=t.prepareCtx(n),u=l(n,i,t);e&&(e.ctx=i)&&(e.apimsg=u),this.act(u,function(f,d,g){return e&&S(e,arguments),s.remove(this,i,a,f,d,g,e)})},close:function(n,a){a()},native:function(n,a){a()}},x=o(r,t,m);function h(n){let a=t.debug&&{msg:n[0],meta:n[2],start:Date.now()};return a&&w.push(a),a}function S(n,a){return n.apiend=Date.now(),n.err=a[0],n.res=a[1],n.apimeta=a[2],n}return{name:m.name,tag:x.tag,exports:{makeApiMsg:l,msglog:w}}}return v.defaults={debug:!1,apimsg:{aim:"req",on:"entity",debounce$:!0,q:(t,r)=>t.q,ent:(t,r)=>t.ent,cmd:(t,r)=>r.cmd,canon:(t,r)=>(t.ent||t.qent).entity$,store:(t,r)=>r.store},prepareCtx:(t,r)=>{r=r||{};let o=t.q;return r.store=o.store$!==!1,delete o.store$,r.cmd=t.cmd,r.canon=(t.ent||t.qent).entity$,r},handleResponse:{any:function(t,r,o,c,s,w,l){if(console.log("BS RES",c,s),l&&(l.end=Date.now()),c&&o(c),s)if(s.ok)o(s.ent);else{let m=s.err;m=m||new Error(`BrowserStore: ${r.cmd} ${r.canon}: unknown error`),o(m)}},list:function(t,r,o,c,s,w,l){if(l&&(l.end=Date.now()),c&&o(c),s&&s.ok&&s.list){let m=s.list.map(x=>t.entity(r.canon).data$(x));l&&(l.end=Date.now()),o(m)}else o(s&&s.err||new Error(`BrowserStore: ${r.cmd} ${r.canon}: unknown list error`))}}},Object.defineProperty(v,"name",{value:"BrowserStore"}),v}();
//# sourceMappingURL=browser-store.iife.js.map
