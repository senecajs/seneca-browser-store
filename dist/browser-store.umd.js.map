{"version":3,"file":"browser-store.umd.js","sources":["../src/browser-store.ts"],"sourcesContent":["/* Copyright (c) 2023 Richard Rodger and other contributors, MIT License */\n\n\nfunction BrowserStore(this: any, options: any) {\n  let seneca: any = this\n\n  let init = seneca.export('entity/init')\n\n  let ohr = options.handleResponse\n  let handleResponse = ['save', 'load', 'list', 'remove'].reduce(\n    (a: any, n) => ((a[n] = ohr[n] || ohr.any), a),\n    {},\n  )\n\n  const msglog: {\n    msg: any\n    meta: any\n    start: number\n    ctx?: any\n    apimsg?: any\n    res?: any\n    err?: any\n    apimeta?: any\n    apiend?: number\n    end?: number\n  }[] = []\n\n\n  function makeApiMsg(msg: any, ctx: any, options: any) {\n    let apimsg: any = {}\n    let apimsgtm = options.apimsg\n\n    for (let pn in apimsgtm) {\n      let pv = apimsgtm[pn]\n      if ('function' === typeof pv) {\n        apimsg[pn] = pv(msg, ctx, options)\n      } else {\n        apimsg[pn] = JSON.parse(JSON.stringify(pv))\n      }\n    }\n\n    return apimsg\n  }\n\n\n  let store = {\n    name: 'BrowserStore',\n\n    save: function (this: any, msg: any, reply: any, _meta: any) {\n      let logn = options.debug && logstart(arguments)\n      let ctx = options.prepareCtx(msg)\n      let apimsg = makeApiMsg(msg, ctx, options)\n\n      logn && logreq(logn, ctx, apimsg)\n      this.act(\n        apimsg,\n        function save_result(this: any, err: Error, res: any, apimeta: any) {\n          logn && logres(logn, arguments)\n          return handleResponse.save(this, ctx, reply, err, res, apimeta, logn)\n        },\n      )\n    },\n\n    load: function (this: any, msg: any, reply: any, _meta: any) {\n      let logn = options.debug && logstart(arguments)\n      let ctx = options.prepareCtx(msg)\n      let apimsg = makeApiMsg(msg, ctx, options)\n\n      logn && logreq(logn, ctx, apimsg)\n      this.act(\n        apimsg,\n        function load_result(this: any, err: Error, res: any, apimeta: any) {\n          logn && logres(logn, arguments)\n          return handleResponse.load(this, ctx, reply, err, res, apimeta, logn)\n        },\n      )\n    },\n\n    list: function (this: any, msg: any, reply: any, _meta: any) {\n      let logn = options.debug && logstart(arguments)\n      let ctx = options.prepareCtx(msg)\n      let apimsg = makeApiMsg(msg, ctx, options)\n\n      logn && logreq(logn, ctx, apimsg)\n      this.act(\n        apimsg,\n        function list_result(this: any, err: Error, res: any, apimeta: any) {\n          logn && logres(logn, arguments)\n          return handleResponse.list(this, ctx, reply, err, res, apimeta, logn)\n        },\n      )\n    },\n\n    remove: function (this: any, msg: any, reply: any, _meta: any) {\n      let logn = options.debug && logstart(arguments)\n      let ctx = options.prepareCtx(msg)\n      let apimsg = makeApiMsg(msg, ctx, options)\n\n      logn && logreq(logn, ctx, apimsg)\n      this.act(\n        apimsg,\n        function remove_result(this: any, err: Error, res: any, apimeta: any) {\n          logn && logres(logn, arguments)\n          return handleResponse.remove(\n            this,\n            ctx,\n            reply,\n            err,\n            res,\n            apimeta,\n            logn,\n          )\n        },\n      )\n    },\n\n    close: function (this: any, _msg: any, reply: any) {\n      reply()\n    },\n\n    native: function (this: any, _msg: any, reply: any) {\n      reply()\n    },\n  }\n\n  let meta = init(seneca, options, store)\n\n  function logstart(args: any) {\n    let logn = options.debug && {\n      msg: args[0],\n      meta: args[2],\n      start: Date.now(),\n    }\n    logn && msglog.push(logn)\n    return logn\n  }\n\n  function logreq(logn: any, ctx: any, apimsg: any) {\n    logn.apistart = Date.now()\n    logn.ctx = ctx\n    logn.apimsg = apimsg\n    return logn\n  }\n\n  function logres(logn: any, args: any) {\n    logn.apiend = Date.now()\n    logn.err = args[0]\n    logn.res = args[1]\n    logn.apimeta = args[2]\n    return logn\n  }\n\n  return {\n    name: store.name,\n    tag: meta.tag,\n    exports: {\n      makeApiMsg,\n      msglog,\n    },\n  }\n}\n\n\nfunction canonStr(seneca: any, ctx: any) {\n  return seneca.entity(ctx.zone, ctx.base, ctx.name).canon$()\n}\n\n\nBrowserStore.defaults = {\n  debug: false,\n\n\n  apimsg: {\n    aim: 'req',\n    on: 'entity',\n    debounce$: true,\n    q: (msg: any, _ctx: any) => msg.q,\n    ent: (msg: any, _ctx: any) => msg.ent,\n    // cmd: (_msg: any, ctx: any) => ctx.cmd,\n    save: (_msg: any, ctx: any) => 'save' === ctx.cmd ? 'entity' : undefined,\n    load: (_msg: any, ctx: any) => 'load' === ctx.cmd ? 'entity' : undefined,\n    list: (_msg: any, ctx: any) => 'list' === ctx.cmd ? 'entity' : undefined,\n    remove: (_msg: any, ctx: any) => 'remove' === ctx.cmd ? 'entity' : undefined,\n    store: (_msg: any, ctx: any) => ctx.store,\n    name: (_msg: any, ctx: any) => ctx.name,\n    base: (_msg: any, ctx: any) => ctx.base,\n    zone: (_msg: any, ctx: any) => ctx.zone,\n  },\n\n\n  prepareCtx: (msg: any, ctx: any) => {\n    ctx = ctx || {}\n\n    let q = msg.q\n    ctx.store = false !== q.store$\n    delete q.store$\n\n    ctx.cmd = msg.cmd\n\n    let ent = msg.ent || msg.qent\n\n    if (ent) {\n      if (ent.canon$) {\n        Object.assign(ctx, ent.canon$({ object: true }))\n      }\n      else if (ent.entity$) {\n        let parts = ent.entity$.split('/')\n        Object.assign(ctx, {\n          zone: '-' === parts[0] ? null : parts[0],\n          base: '-' === parts[1] ? null : parts[1],\n          name: '-' === parts[2] ? null : parts[2],\n        })\n      }\n    }\n\n    return ctx\n  },\n\n  handleResponse: {\n    any: function (\n      seneca: any,\n      ctx: any,\n      reply: any,\n      err: Error,\n      res: any,\n      _apimeta: any,\n      logn: any,\n    ) {\n      logn && (logn.end = Date.now())\n\n      if (err) {\n        return reply(err)\n      }\n\n      if (res && res.ok) {\n        return reply(res.ent)\n      }\n      else {\n        let err = res && res.err\n        err = err || new Error(\n          `BrowserStore: ${ctx.cmd} ${canonStr(seneca, ctx)}: unknown error`)\n        return reply(err)\n      }\n    },\n\n    list: function (\n      seneca: any,\n      ctx: any,\n      reply: any,\n      err: Error,\n      res: any,\n      _apimeta: any,\n      logn: any,\n    ) {\n      logn && (logn.end = Date.now())\n\n      if (err) {\n        reply(err)\n      }\n\n      if (res && res.ok && res.list) {\n        let ent = seneca.entity({ zone: ctx.zone, base: ctx.base, name: ctx.name })\n        let list = res.list.map((item: any) => ent.make$().data$(item))\n        logn && (logn.end = Date.now())\n        reply(list)\n      }\n      else {\n        let err = res && res.err\n        err = err || new Error(\n          `BrowserStore: ${ctx.cmd} ${canonStr(seneca, ctx)}: unknown list error`,\n        )\n        reply(err)\n      }\n    },\n  }\n}\n\n// Prevent name mangling\nObject.defineProperty(BrowserStore, 'name', { value: 'BrowserStore' })\n\n\nexport default BrowserStore\n"],"names":["BrowserStore","options","seneca","init","ohr","handleResponse","a","n","msglog","makeApiMsg","msg","ctx","apimsg","apimsgtm","pn","pv","store","reply","_meta","logn","logstart","logreq","err","res","apimeta","logres","_msg","meta","args","canonStr","_ctx","q","ent","parts","_apimeta","list","item"],"mappings":"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"}